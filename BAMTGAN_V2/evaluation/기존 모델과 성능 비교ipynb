{"cells":[{"cell_type":"markdown","metadata":{"id":"rg95NVswxZMi"},"source":["#기존 모델과 성능 비교"]},{"cell_type":"markdown","source":["- SMOTE, CTGAN, TVAE, CTABGAN과 제안 기법 비교\n","-CTABGAN은 https://github.com/Team-TUD/CTAB-GAN 코드로 실험\n","- 기존 모델과 성능 비교 막대 그래프 시각화"],"metadata":{"id":"OcsU3vtow6Fg"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2074,"status":"ok","timestamp":1686911338383,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"},"user_tz":-540},"id":"rOQUtli0xA-M","outputId":"a7e9a275-f171-4696-fb3d-ab5292a24113"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive/; to attempt to forcibly remount, call drive.mount(\"/content/gdrive/\", force_remount=True).\n","/content/gdrive/My Drive/Colab Notebooks/BAMT-GAN/evaluation\n"]}],"source":["from google.colab import drive\n","\n","drive.mount('/content/gdrive/')\n","\n","%cd /content/gdrive/My Drive/Colab Notebooks/BAMT-GAN/evaluation/"]},{"cell_type":"markdown","metadata":{"id":"p4mIa3w0xbwN"},"source":["##import"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"cCAlenFBxHL0","executionInfo":{"status":"ok","timestamp":1686911255301,"user_tz":-540,"elapsed":29965,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}},"outputId":"f7142b38-447d-4222-9c79-177379c0c83e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found existing installation: numpy 1.22.4\n","Uninstalling numpy-1.22.4:\n","  Would remove:\n","    /usr/local/bin/f2py\n","    /usr/local/bin/f2py3\n","    /usr/local/bin/f2py3.10\n","    /usr/local/lib/python3.10/dist-packages/numpy-1.22.4.dist-info/*\n","    /usr/local/lib/python3.10/dist-packages/numpy.libs/libgfortran-040039e1.so.5.0.0\n","    /usr/local/lib/python3.10/dist-packages/numpy.libs/libopenblas64_p-r0-2f7c42d4.3.18.so\n","    /usr/local/lib/python3.10/dist-packages/numpy.libs/libquadmath-96973f99.so.0.0.0\n","    /usr/local/lib/python3.10/dist-packages/numpy/*\n","Proceed (Y/n)? Y\n","  Successfully uninstalled numpy-1.22.4\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting numpy==1.22\n","  Downloading numpy-1.22.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.8/16.8 MB\u001b[0m \u001b[31m54.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: numpy\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","librosa 0.10.0.post2 requires numpy!=1.22.0,!=1.22.1,!=1.22.2,>=1.20.3, but you have numpy 1.22.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed numpy-1.22.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["numpy"]}}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting ctgan\n","  Downloading ctgan-0.7.3-py2.py3-none-any.whl (26 kB)\n","Collecting packaging<22,>=20 (from ctgan)\n","  Downloading packaging-21.3-py3-none-any.whl (40 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m40.8/40.8 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting rdt<2.0,>=1.3.0 (from ctgan)\n","  Downloading rdt-1.5.0-py2.py3-none-any.whl (66 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m66.9/66.9 kB\u001b[0m \u001b[31m7.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting numpy<2,>=1.23.3 (from ctgan)\n","  Downloading numpy-1.24.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.3/17.3 MB\u001b[0m \u001b[31m62.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas>=1.3.4 in /usr/local/lib/python3.10/dist-packages (from ctgan) (1.5.3)\n","Requirement already satisfied: scikit-learn<2,>=1.1.3 in /usr/local/lib/python3.10/dist-packages (from ctgan) (1.2.2)\n","Requirement already satisfied: torch>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from ctgan) (2.0.1+cu118)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from packaging<22,>=20->ctgan) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.4->ctgan) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.4->ctgan) (2022.7.1)\n","Requirement already satisfied: psutil<6,>=5.7 in /usr/local/lib/python3.10/dist-packages (from rdt<2.0,>=1.3.0->ctgan) (5.9.5)\n","Collecting Faker>=10 (from rdt<2.0,>=1.3.0->ctgan)\n","  Downloading Faker-18.10.1-py3-none-any.whl (1.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m70.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: scipy<2,>=1.9.2 in /usr/local/lib/python3.10/dist-packages (from rdt<2.0,>=1.3.0->ctgan) (1.10.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn<2,>=1.1.3->ctgan) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn<2,>=1.1.3->ctgan) (3.1.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.11.0->ctgan) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.11.0->ctgan) (16.0.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas>=1.3.4->ctgan) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.11.0->ctgan) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.11.0->ctgan) (1.3.0)\n","Installing collected packages: packaging, numpy, Faker, rdt, ctgan\n","  Attempting uninstall: packaging\n","    Found existing installation: packaging 23.1\n","    Uninstalling packaging-23.1:\n","      Successfully uninstalled packaging-23.1\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.22.0\n","    Uninstalling numpy-1.22.0:\n","      Successfully uninstalled numpy-1.22.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","numba 0.56.4 requires numpy<1.24,>=1.18, but you have numpy 1.24.3 which is incompatible.\n","tensorflow 2.12.0 requires numpy<1.24,>=1.22, but you have numpy 1.24.3 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed Faker-18.10.1 ctgan-0.7.3 numpy-1.24.3 packaging-21.3 rdt-1.5.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["numpy","packaging"]}}},"metadata":{}}],"source":["!pip uninstall numpy\n","!pip install numpy==1.22\n","!pip install ctgan"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"jkCd9i-txOXs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686911302727,"user_tz":-540,"elapsed":47433,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}},"outputId":"14da7745-a33c-4307-f370-193f322c537c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting sktime<0.5,>=0.4\n","  Downloading sktime-0.4.3.tar.gz (9.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.7/9.7 MB\u001b[0m \u001b[31m21.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  \u001b[1;31merror\u001b[0m: \u001b[1msubprocess-exited-with-error\u001b[0m\n","  \n","  \u001b[31m×\u001b[0m \u001b[32mpython setup.py egg_info\u001b[0m did not run successfully.\n","  \u001b[31m│\u001b[0m exit code: \u001b[1;36m1\u001b[0m\n","  \u001b[31m╰─>\u001b[0m See above for output.\n","  \n","  \u001b[1;35mnote\u001b[0m: This error originates from a subprocess, and is likely not a problem with pip.\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25herror\n","\u001b[1;31merror\u001b[0m: \u001b[1mmetadata-generation-failed\u001b[0m\n","\n","\u001b[31m×\u001b[0m Encountered error while generating package metadata.\n","\u001b[31m╰─>\u001b[0m See above for output.\n","\n","\u001b[1;35mnote\u001b[0m: This is an issue with the package mentioned above, not pip.\n","\u001b[1;36mhint\u001b[0m: See above for details.\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting sdv\n","  Downloading sdv-1.2.0-py2.py3-none-any.whl (124 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m124.6/124.6 kB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting Faker<15,>=10 (from sdv)\n","  Downloading Faker-14.2.1-py3-none-any.whl (1.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m28.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: graphviz<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from sdv) (0.20.1)\n","Requirement already satisfied: tqdm<5,>=4.15 in /usr/local/lib/python3.10/dist-packages (from sdv) (4.65.0)\n","Collecting copulas<0.10,>=0.9.0 (from sdv)\n","  Downloading copulas-0.9.0-py2.py3-none-any.whl (54 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.3/54.3 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: ctgan<0.8,>=0.7.2 in /usr/local/lib/python3.10/dist-packages (from sdv) (0.7.3)\n","Collecting deepecho<0.5,>=0.4.1 (from sdv)\n","  Downloading deepecho-0.4.1-py2.py3-none-any.whl (28 kB)\n","Requirement already satisfied: rdt<2,>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from sdv) (1.5.0)\n","Collecting sdmetrics<0.11,>=0.10.0 (from sdv)\n","  Downloading sdmetrics-0.10.1-py2.py3-none-any.whl (145 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m145.1/145.1 kB\u001b[0m \u001b[31m13.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: cloudpickle<3.0,>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from sdv) (2.2.1)\n","Collecting boto3<2,>=1.15.0 (from sdv)\n","  Downloading boto3-1.26.154-py3-none-any.whl (135 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m135.6/135.6 kB\u001b[0m \u001b[31m14.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting botocore<2,>=1.18 (from sdv)\n","  Downloading botocore-1.29.154-py3-none-any.whl (10.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.9/10.9 MB\u001b[0m \u001b[31m26.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<2,>=1.23.3 in /usr/local/lib/python3.10/dist-packages (from sdv) (1.24.3)\n","Requirement already satisfied: pandas>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from sdv) (1.5.3)\n","Collecting jmespath<2.0.0,>=0.7.1 (from boto3<2,>=1.15.0->sdv)\n","  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n","Collecting s3transfer<0.7.0,>=0.6.0 (from boto3<2,>=1.15.0->sdv)\n","  Downloading s3transfer-0.6.1-py3-none-any.whl (79 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.8/79.8 kB\u001b[0m \u001b[31m7.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.10/dist-packages (from botocore<2,>=1.18->sdv) (2.8.2)\n","Requirement already satisfied: urllib3<1.27,>=1.25.4 in /usr/local/lib/python3.10/dist-packages (from botocore<2,>=1.18->sdv) (1.26.15)\n","Requirement already satisfied: matplotlib<4,>=3.6.0 in /usr/local/lib/python3.10/dist-packages (from copulas<0.10,>=0.9.0->sdv) (3.7.1)\n","Requirement already satisfied: scipy<2,>=1.9.2 in /usr/local/lib/python3.10/dist-packages (from copulas<0.10,>=0.9.0->sdv) (1.10.1)\n","Requirement already satisfied: packaging<22,>=20 in /usr/local/lib/python3.10/dist-packages (from ctgan<0.8,>=0.7.2->sdv) (21.3)\n","Requirement already satisfied: scikit-learn<2,>=1.1.3 in /usr/local/lib/python3.10/dist-packages (from ctgan<0.8,>=0.7.2->sdv) (1.2.2)\n","Requirement already satisfied: torch>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from ctgan<0.8,>=0.7.2->sdv) (2.0.1+cu118)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.5.0->sdv) (2022.7.1)\n","Requirement already satisfied: psutil<6,>=5.7 in /usr/local/lib/python3.10/dist-packages (from rdt<2,>=1.5.0->sdv) (5.9.5)\n","Requirement already satisfied: plotly<6,>=5.10.0 in /usr/local/lib/python3.10/dist-packages (from sdmetrics<0.11,>=0.10.0->sdv) (5.13.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (1.4.4)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<4,>=3.6.0->copulas<0.10,>=0.9.0->sdv) (3.0.9)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly<6,>=5.10.0->sdmetrics<0.11,>=0.10.0->sdv) (8.2.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<2,>=1.18->sdv) (1.16.0)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn<2,>=1.1.3->ctgan<0.8,>=0.7.2->sdv) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn<2,>=1.1.3->ctgan<0.8,>=0.7.2->sdv) (3.1.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (3.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (3.1.2)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (16.0.5)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (2.1.2)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch>=1.11.0->ctgan<0.8,>=0.7.2->sdv) (1.3.0)\n","Installing collected packages: jmespath, Faker, botocore, s3transfer, copulas, sdmetrics, boto3, deepecho, sdv\n","  Attempting uninstall: Faker\n","    Found existing installation: Faker 18.10.1\n","    Uninstalling Faker-18.10.1:\n","      Successfully uninstalled Faker-18.10.1\n","Successfully installed Faker-14.2.1 boto3-1.26.154 botocore-1.29.154 copulas-0.9.0 deepecho-0.4.1 jmespath-1.0.1 s3transfer-0.6.1 sdmetrics-0.10.1 sdv-1.2.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting catboost\n","  Downloading catboost-1.2-cp310-cp310-manylinux2014_x86_64.whl (98.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.6/98.6 MB\u001b[0m \u001b[31m9.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.7.1)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.24.3)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.5.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.10.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.13.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2022.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (21.3)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.0.9)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (8.2.2)\n","Installing collected packages: catboost\n","Successfully installed catboost-1.2\n"]}],"source":["!pip install 'sktime>=0.4,<0.5' 'tsfresh<1,>=0.15'\n","!pip install sdv\n","!pip install catboost"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"ppCpEGVHxSTj","executionInfo":{"status":"ok","timestamp":1686911344553,"user_tz":-540,"elapsed":5317,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["from sklearn.metrics import make_scorer, roc_auc_score, f1_score, accuracy_score\n","from sklearn.model_selection import cross_val_score, KFold, cross_validate\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.pipeline import make_pipeline\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import LinearSVC\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.neural_network import MLPClassifier\n","\n","import pandas as pd\n","from catboost import CatBoostClassifier\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","import matplotlib as mlp\n","\n","%matplotlib inline\n","\n","from sklearn.cluster import KMeans\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score\n","from imblearn.over_sampling import SMOTE\n","from sklearn.ensemble import VotingClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","# import machine learning algorithms\n","from sklearn.ensemble import GradientBoostingClassifier\n","from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc\n","from lightgbm import LGBMClassifier\n","from xgboost import XGBClassifier\n","from sklearn.ensemble import VotingClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.preprocessing import MinMaxScaler,StandardScaler\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn import tree\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"dc5QeakpxTpH","executionInfo":{"status":"ok","timestamp":1686911353283,"user_tz":-540,"elapsed":8733,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from ctgan import load_demo\n","from ctgan import CTGAN\n","\n","from ctgan import load_demo\n","from sdv.single_table import TVAESynthesizer\n","from sdv.single_table import CopulaGANSynthesizer\n","from ctgan import CTGAN\n","from sdv.metadata import SingleTableMetadata"]},{"cell_type":"markdown","metadata":{"id":"bVWBn3kCxfmL"},"source":["##기존 모델 코드"]},{"cell_type":"code","source":["import pandas as pd\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import train_test_split\n","from collections import Counter\n","\n","def go_smote(df_path,target,sample_percent,file_name):\n","  # csv 파일에서 데이터 로드\n","  df = pd.read_csv(df_path)\n","\n","  # 데이터와 레이블 분리\n","  X = df.drop(target, axis=1)  # target이 레이블에 해당하는 칼럼명이라고 가정\n","  y = df[target]\n","\n","  # 각 클래스의 개수 확인\n","  class_counts = y.value_counts()\n","\n","  # 원본 데이터의 40%만큼 증가시키기 위한 비율 계산\n","  sample_strategy = {class_name: int(count * sample_percent) for class_name, count in class_counts.items()}\n","\n","  # SMOTE 적용\n","  smote = SMOTE(sampling_strategy=sample_strategy, random_state=42)\n","  X_res, y_res = smote.fit_resample(X, y)\n","\n","  # 증강 데이터와 원본 데이터를 합치기 전에 레이블 y를 다시 붙여서 DataFrame 형태로 만듭니다.\n","  df_res = pd.DataFrame(X_res, columns=X.columns)\n","  df_res[target] = y_res\n","\n","  # 최종 데이터 확인\n","  print(df_res.shape)\n","  df_res.to_csv('./diff_model/'+str(file_name)+'_smote'+str(sample_percent)+'.csv',index=False)\n","  new_ml_eval2(df_path,target)"],"metadata":{"id":"PM4PUfdQvPhz","executionInfo":{"status":"ok","timestamp":1686911353284,"user_tz":-540,"elapsed":15,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"id":"HOEs1ebzxfEv","executionInfo":{"status":"ok","timestamp":1686911354914,"user_tz":-540,"elapsed":2,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["def go_ctgan(df,d_col,sample,file_name):\n","  df = pd.read_csv(df)\n","  print(df)\n","  ctgan = CTGAN(epochs=150)\n","  ctgan.fit(df, d_col)\n","\n","\n","  synthetic_data = ctgan.sample(sample)\n","  return synthetic_data"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"os1bL6QExjYr","executionInfo":{"status":"ok","timestamp":1686911355427,"user_tz":-540,"elapsed":2,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["def go_tvae(df,d_col,sample,file_name):\n","  data = pd.read_csv(df)\n","  metadata = SingleTableMetadata()\n","  metadata.detect_from_csv(filepath=df)\n","  synthesizer = TVAESynthesizer(metadata, epochs=500)\n","  synthesizer.fit(data)\n","\n","  synthetic_data = synthesizer.sample(num_rows=sample)\n","  return synthetic_data"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"CptCTvNjxk2M","executionInfo":{"status":"ok","timestamp":1686911355427,"user_tz":-540,"elapsed":1,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["def go_copula(df,d_col,sample,file_name):\n","  data = pd.read_csv(df)\n","  metadata = SingleTableMetadata()\n","  metadata.detect_from_csv(filepath=df)\n","  synthesizer = CopulaGANSynthesizer(metadata,epochs=500)\n","  synthesizer.fit(data)\n","\n","  synthetic_data = synthesizer.sample(num_rows=sample)\n","  return synthetic_data"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"gmaNpcrkxn-7","executionInfo":{"status":"ok","timestamp":1686911355862,"user_tz":-540,"elapsed":2,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"}}},"outputs":[],"source":["def go_all_model(df, d_col, file_name, one_sample, two_sample):\n","    # Load the original data\n","    orig_df = pd.read_csv(df)\n","    orig_size = len(orig_df)\n","\n","    # Function mapping\n","    func_dict = {\n","       'ctgan': go_ctgan,\n","        'tvae': go_tvae,\n","        'copula': go_copula\n","    }\n","    model_name = ['tvae', 'ctgan','copula']\n","    for name in model_name:\n","        for size in [one_sample, two_sample]:\n","            csv_name = f'{file_name}_{size}_{name}.csv'\n","            augment_size = abs(size - orig_size)\n","            # Augment the data\n","            augmented_df = func_dict[name](df, d_col, augment_size, csv_name)\n","            # Concatenate original and augmented data\n","            total_df = pd.concat([orig_df, augmented_df])\n","            # Save to CSV\n","            total_df.to_csv('./diff_model/'+csv_name, index=False)\n","\n","    return total_df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X1rICpXyxxTy"},"outputs":[],"source":["tox21_d_col = ['289', '208', '397', '304', '309','SR.ARE']\n","\n","go_all_model('../data/tox21.csv',tox21_d_col,'tox21',10360,29600)\n","go_smote('../data/tox21.csv','SR.ARE',1.4,'tox21')\n","go_smote('../data//tox21.csv','SR.ARE',4.0,'tox21')"]},{"cell_type":"markdown","source":["##기존 모델과 성능 비교 시각화"],"metadata":{"id":"7FAlcc3SwMqK"}},{"cell_type":"markdown","metadata":{"id":"uow-_7DhneHQ"},"source":["###RAW+기존 모델+BAMTGAN 성능 비교(RF) +200% Augmentation"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1686807855198,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"},"user_tz":-540},"id":"7TrSjvaEneHY","outputId":"de6786e3-b114-4dea-9a11-59e7998c5f6b"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-76048684-80ca-49ac-9a13-1a6ac0f0f315\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ACC</th>\n","      <th>AUC</th>\n","      <th>F1-score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>RAW</th>\n","      <td>81</td>\n","      <td>75</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>SMOTE(2002)</th>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>CTGAN(2019)</th>\n","      <td>80</td>\n","      <td>71</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>TVAE(2019)</th>\n","      <td>83</td>\n","      <td>75</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>CTABGAN(2021)</th>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>BAMTGAN(2023)</th>\n","      <td>85</td>\n","      <td>85</td>\n","      <td>83</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76048684-80ca-49ac-9a13-1a6ac0f0f315')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-76048684-80ca-49ac-9a13-1a6ac0f0f315 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-76048684-80ca-49ac-9a13-1a6ac0f0f315');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["               ACC  AUC  F1-score\n","RAW             81   75        61\n","SMOTE(2002)     81   74        61\n","CTGAN(2019)     80   71        54\n","TVAE(2019)      83   75        61\n","CTABGAN(2021)   81   74        60\n","BAMTGAN(2023)   85   85        83"]},"execution_count":88,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","\n","acc = [81,81,80,83,81,85]\n","auc = [75,74,71,75,74,85]\n","f1_score = [61,61,54,61,60,83]\n","model = ['RAW','SMOTE(2002)', 'CTGAN(2019)', 'TVAE(2019)','CTABGAN(2021)','BAMTGAN(2023)']\n","df = pd.DataFrame({'ACC' : acc, 'AUC' : auc, 'F1-score' : f1_score}, index = model)\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":596},"executionInfo":{"elapsed":1790,"status":"ok","timestamp":1686807923874,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"},"user_tz":-540},"id":"mwsbbavBneHY","outputId":"f882ac51-2d3d-4c3a-ccad-ff8cb73be515"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig, ax = plt.subplots(figsize=(18,6))\n","bar_width = 0.25\n","\n","index = np.arange(6)\n","\n","plt.rc('font', size=13)\n","\n","b1 = plt.bar(index, df['ACC'], bar_width, alpha=0.4, color='red', label='ACC')\n","\n","b2 = plt.bar(index + bar_width, df['AUC'], bar_width, alpha=0.4, color='blue', label='AUC')\n","\n","b3 = plt.bar(index + 2 * bar_width, df['F1-score'], bar_width, alpha=0.4, color='green', label='F1-score')\n","\n","# 각 막대에 대한 값을 표시\n","for b in [b1, b2, b3]:\n","    for rect in b:\n","        height = rect.get_height()\n","        ax.text(rect.get_x() + rect.get_width() / 2., height,\n","                '%d' % round(float(height)), ha='center', va='bottom')\n","\n","plt.xticks(np.arange(bar_width, 6 + bar_width, 1), model)\n","\n","plt.ylabel('Performance', size = 20,fontweight='bold')\n","plt.xlabel('Models', size = 20,fontweight='bold')\n","plt.title(\"Model Performance Comparison using Random Forest(200% Augmentation)\",size=20,fontweight='bold')\n","plt.legend(loc='lower right')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"Ue8MIJ1zrRwn"},"source":["###RAW+기존 모델+BAMTGAN 성능 비교(RF) +40% Augmentation"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"elapsed":276,"status":"ok","timestamp":1686807940329,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"},"user_tz":-540},"id":"dh0ELmYkra6i","outputId":"b89d3ee4-5c9f-4a19-9587-733b52af1f7b"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-8c715369-92d5-4b18-b298-ce985abc8d6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ACC</th>\n","      <th>AUC</th>\n","      <th>F1-score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>RAW</th>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>SMOTE(2002)</th>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>CTGAN(2019)</th>\n","      <td>76</td>\n","      <td>71</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>TVAE(2019)</th>\n","      <td>82</td>\n","      <td>75</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>CTABGAN(2021)</th>\n","      <td>81</td>\n","      <td>74</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>BAMTGAN(2023)</th>\n","      <td>86</td>\n","      <td>86</td>\n","      <td>86</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c715369-92d5-4b18-b298-ce985abc8d6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8c715369-92d5-4b18-b298-ce985abc8d6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8c715369-92d5-4b18-b298-ce985abc8d6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["               ACC  AUC  F1-score\n","RAW             81   74        61\n","SMOTE(2002)     81   74        61\n","CTGAN(2019)     76   71        58\n","TVAE(2019)      82   75        62\n","CTABGAN(2021)   81   74        61\n","BAMTGAN(2023)   86   86        86"]},"execution_count":93,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","\n","acc = [81,81,76,82,81,86]\n","auc = [74,74,71,75,74,86]\n","f1_score = [61,61,58,62,61,86]\n","model = ['RAW','SMOTE(2002)', 'CTGAN(2019)', 'TVAE(2019)','CTABGAN(2021)','BAMTGAN(2023)']\n","df = pd.DataFrame({'ACC' : acc, 'AUC' : auc, 'F1-score' : f1_score}, index = model)\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":590},"executionInfo":{"elapsed":1581,"status":"ok","timestamp":1686807948363,"user":{"displayName":"jueun jeong","userId":"04297412217708142478"},"user_tz":-540},"id":"bUAz-T5jtHtO","outputId":"85535938-d7cb-402c-d161-be8a296ab011"},"outputs":[{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAABckAAAI9CAYAAADhDfBhAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAADYq0lEQVR4nOzdd3gU1fv38c8SSA9JSGih916kCoh0QfiCdEVEerEgKBaKKBbEhgiIiIoCFlAEpar0JlUQQZqABBAEkRZCSUgyzx882V82s0l2wyRLkvfruvZKdvbMmXt2p+29Z86xGYZhCAAAAAAAAACAHCiXpwMAAAAAAAAAAMBTSJIDAAAAAAAAAHIskuQAAAAAAAAAgByLJDkAAAAAAAAAIMciSQ4AAAAAAAAAyLFIkgMAAAAAAAAAciyS5AAAAAAAAACAHIskOQAAAAAAAAAgxyJJDgAAAAAAAADIsUiSA9lcnz59ZLPZHB7r1q3LsOVFRkaalte0adMMW15W9ttvv6lfv34qX768AgICHN6zkJAQT4cHIAspWbKk6diLrCH551ayZElPh4RMxjaArOC+++5z2E6/+uorT4cEwAOaNm1qOm9FRkZ6OiyXRUZGKk+ePPbYCxQooMuXL3s6LNwhSJIjRxs3bpzpAJ/4+PTTT9Ocv1GjRinOD2s4Owknf/j7+6tIkSJq3bq1JkyYoH/++cfTYafpyy+/VL169fT555/r8OHDunbtmqdDQg5z6NAhvf3222rbtq3Kli2r0NBQ5cmTR6Ghoapevbp69eql2bNn6+LFi54OFUA2kdb53MfHR+Hh4apVq5b69u2rRYsWKSEhwdNhIxM5a9zhyuP999/3dOjZ2uLFi7Vy5Ur789KlS+uhhx5yef4TJ04oKCgo3d+ZDMPQwoUL1aNHD5UuXVoBAQHKmzevypcvr/79+2v16tVp1nHu3Dk999xzqlixovz8/BQUFKR69epp8uTJunnzZqrzXr16VcWLF5fNZlPevHl16tQpl+JOj2eeecbp++Tn56eoqKgMWy6QU5QsWdLh+HXu3Dm9+uqrHowIdxKS5EAKpk+fnurrv//+uzZv3pxJ0SA1169f1+nTp7VixQqNHj1apUuX1sSJEz0dVoouXryoxx9/XHFxcZ4OBTnQX3/9pa5du6py5cp64YUX9OOPP+ro0aO6dOmS4uLidOnSJe3du1dffvml+vTpo6JFi7r0oyEA3K7Y2FidP39ev/32m2bNmqWOHTuqTp06OnHihKdDA7K0WbNmmZKu48aNc2lewzA0ZswYh2nPPfecvLy8XF7+Y489pujoaHdCtjt58qQaN26sLl26aN68eTp27JiuXbumK1eu6PDhw/rss8/UsmVLdezYMcXWoIcPH9Zdd92ld999V4cOHdKNGzcUHR2tHTt2aPjw4WrZsqVu3LiRYgyvvfaaTp48KelWI6siRYqka13SkpCQoHnz5jl97caNG1q4cGGGLBeek9l3fd9py/eUkSNHOvxIN23aNP39998ejAh3ityeDgC4U+3atUvbt29XvXr1nL7+4YcfZnJEcNWNGzf07LPP6urVq3rppZc8HY7JihUrdOXKFYdpvr6+6tixowoWLChJ8vPz80RoyOaWLFmiRx99VJcuXXJ5nmvXrumPP/7IuKBgiX79+unChQueDgPpMGzYMIfn+fLl81Akd6bffvtNrVu31u+//y5vb29PhwPkOAsXLnS4DsibN6/69Onj8vxff/21li9fnq5lnz59Wk2bNtVff/2VZtlFixapdevWWr16tQICAhxe69mzp731d9WqVTVlyhSdOXNGgwcP1pUrV7Rhwwa99NJLevvtt031HjhwQO+995593qeeeipd6+KKNWvWpHpHbGIDBsCTunbtqpo1azpMy5s3r2eCSacqVaqoefPm9rtQYmJi9Pbbb2vKlCkejgyeRpIcSMX06dOdJsmjoqLoh8+D6tevr7vvvlvSrYT4vn37tGnTJlO51157Td26dVOlSpUyO8RUHTt2zDRt9OjRGjt2rAeiQU6xdu1adenSxektxSEhIWrSpIkKFy6s69evKzIyUtu2bUu1VRXuLHfiD4JwTU7vJqJLly4qWrSobt68qZMnT2rlypWmY8/Bgwf1zTffqFevXh6KEp5UqVIl3XfffamWueuuuzIpmpwn+TGqU6dO8vX1dWne8+fPa/jw4ele9uDBg00J8nz58qlDhw6KiYnR4sWLdfXqVftr27Zt09ixY+1JbUnasWOHduzYYX/+6aefqn79+pJuXZMntpKfMWOG3njjDeXO7ZgiefLJJ+3XTh9++KHpdSul9f1y7dq1On36tCIiIjIsBiAtTz75pKdDsMRDDz3k0FXT559/rtdee03BwcEejAqeRpIcSMU333yj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wlRPSrZt22aUKVPGVD75I3fu3MbIkSONuLi4FOt6++23jVy5cjmd38/Pz/j666+N3r17m15bu3at0/p+++03o2LFimnGFhERYaxfv95pHceOHTOVb9KkiUufhzNNmjQx1ffyyy87LTtixAhT2QoVKpjKXb161ejbt6/D55zSZzB69GgjPj7e5dh++eUXo1KlSk5jdradpPRIvo5//vmnUatWrTTns9lsRt++fY2rV69aErNhpPyZTp8+3cidO7fTOKpWrWqcOXPGiIqKMlq1apVivF27dnXYv5IKCwtz+f2qWLGi8ccffzit5/PPP3e6bqNHj05x/8mdO7cxf/58p/UZhmHExMQYw4cPT3H9kz569+7ttI7Vq1cbRYoUSXP+ChUqpLhuroiJiTECAwNN9fbs2TPddSb6/PPPjaCgoDTXISQkxJg3b57TOpIfUxPfszFjxqRYX9OmTY2rV68ap0+fTnW/GDFihFvLnD59upEnT54U962Ujj179+51eVuVZPzvf/8zLl265LQuZ8fsxYsXG/fcc0+q25Yr56G//vrLKFu2rMtxvvbaa05jPHPmTKr7dfJ1/e+//1xe1yVLlhht2rRJsb6CBQsaBw8edFqfK5yd9z///HNTOVfPZcuXL3e6f6X02Lhxo6mO5GVKlChhKpMRx7H169cbwcHBKcbat29fY+bMmU6Xm17OluPsmuSFF14wlXvwwQed1uns3J/Sw9fX1/jggw9cjq9EiRLGpk2bjIIFC6ZYZ6dOnVK8Trh8+bLRqFGjFOetUqWKcfLkSZe2AcMwjISEBGPChAmGj49PmusaERFhrF692mk9zransWPHGo8++miK9T344INGfHy8sX//fqN06dIplpsyZUqK768rnB0XUjqPpsWqa25nx9c//vjD6Tk8+fHEinP97Ry7nV33pfZIvn8nP/c0a9bMpff+6tWrRqlSpezzVa1a1YiNjXXrO1O+fPlMZX///XdTue+//95Urnbt2vbXP/jgA/t0Pz8/h3m3bt3qMN++ffvsrw0fPtw+fdq0aS6t9+3o0KGDaT3Wrl1r3Hvvvabp+/fvT7GelM4Xzrh67Dl9+rRRuXLlFLeb2rVrGzt27DBNd3bedLaPz58/36hZs6bTum02mzF16lTDMAxjwYIFhr+/v9NygYGBxubNm1N8XzLy+9+WLVuMOnXqpFhn+fLl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AwICHJJEzhLW3t7epgtaZ33l1qtXz7RMZ7f7Jq8rpWU66zvb2XEjtfdv3759xpdffmm89tprxgsvvGDfXp966ilTPffee69pfmdfVsqXL2/arpNL6zy0Z88e0+s///xzqnUm5ywB27dvX6dlO3bsaCqb/McFZ+uatB/ZRJ988omp3FNPPeVW7ImsTJJPmTLF4fUCBQoYJ06ccDum5MtxNUme3uPYO++849L7Hh8f77RrDauT5Kk9ihUrluL5MbkbN24Ya9asMaZNm2a89NJLxogRI+znipYtW5rq/uyzz1yKL7Ev3KSc/XCT9Dz277//ml7PlSuXcfLkSVNdzo4xybcBZ106BQUFOfxQluiHH34wlS1XrpxDGWfbU+HChU3HGWfdfHTv3t2hzM2bN03Jsbx585o/IBdZkSS38prbMJwfX1M69hmGted6K47dhpG+JHnSvrydbefOJO2+RJLx008/ObzuapLcWbeSxYsXd1o2Pj7e6XaRPIl89uxZY8SIEUa5cuUMHx8fIyAgwKhTp44xadIkexeFFy9etH924eHhxvnz5w3DuNWli7P9oVSpUsbSpUtTfU/SEhkZafphOTw83OEHsIkTJ5qWPWTIEKf1WZkkd9bPuLNzj2E433ddTZJ37drVoUxsbKzpWlMyf29bv369qUyHDh0cymTG978uXbqY6nI2ts57773n0vuRVpI6kRXnvYxIkickJBj58+c3lXE2ptm///7r9AeWU6dOOZRzto+n5/zsTPIfR5I36EHOQncrQAoGDRqk8ePH20dFfvPNNx1ug2vdurWpK4+UxMXFOe2+ol27dqZp3t7eatmypWnk8h07dqhhw4aSpN27d5vma926tWlaaGio6tWrp40bN6YYW3x8vHbu3OkwLSYmxjT6e0r++OMPRUdHKzAw0KXymSU8PFxLlixxuC0zeRcnkvT444/r8ccfd6nOLVu2pHl7f+/evd0LNA2Jt4Ym5Wy7kaS2bduatrMdO3bo4YcfTnUZ6Yk5IiJCVapUcZhWqFAhU7mmTZuaugdxVi55lxbSre18xIgRWrt2relWvZTEx8fr4sWLyp8/f6rlWrVqZSpTuHDhNONytg09+uij8vPzcym+yMhIexcJif755x95eXm5NH/ybnVcERwcbJrmrJsFV+3atcs0WnyVKlVUokQJU9kaNWqoSJEiDreAX716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aJWdvEVs8pbtST9Pd+/WWLduXYrftdyR/NrQ2Xnup59+0l9//WV/vmfPHnv/66mpWbOmqVXthQsX7D8qJNqyZUuKreI97U7//ufuvmn1eS89x4a02Gw2p+edp556ymEMiZs3b+rxxx83fQ+pW7duprXmTv5jgre3N0nyHI6W5EAa8uXLZ8kIx08++aTef/99h19UT548qSpVqqhdu3YKCQnR5s2bTclPSRo7dqzDyb1Xr14aO3asQ1znz59XrVq19L///U8hISHasGGD09sPU4pt8uTJDhfZ27dvV8mSJdWkSROVKFFC3t7eunDhgg4ePKgDBw7Yv+TdqX0aO1O8eHENHDhQ06dPt0+7ceOGOnTooEqVKqlGjRoKCwtTdHS0IiMjtWfPHl28eFGS8wFZMsODDz6o8ePHO1ysXL58WfXq1dP999+vwoUL6/fff9fmzZtN8w4dOjTTu8KxQqVKleTn5+fwZfDPP/9UpUqV1KJFC924cUPr1q0z3U2RGYoUKaInnnjCNBjVokWLVLx4cbVo0UIRERGKiorSjh07dPDgQdMXtdGjR+uLL75wWL+lS5eqaNGiatKkiYoVKyabzabz589r//79OnTokD0B5043SEnlz59f3333ndq0aeOQoLl586ZGjBih119/XU2aNFHhwoV148YNRUZGatu2bSm2inr55Ze1atUqh24kfvrpJ5UvX1733XefEhIS9PPPP5s+o9y5c+vFF19M1zpkhrlz52rnzp1q2rSprly5omXLlpkGKQsICFD//v3tz53d1fHFF1/o4MGDqlWrls6cOaOVK1dm2mBJKTEMQ999952+++47+fj4qGrVqipXrpxCQ0OVkJCgI0eOaP369ab5kibmGjZsqPvuu08rVqywT4uLi1Pr1q113333qXTp0jp8+LBp25BuDUJWtWrVjFtBFzVq1Mh0J8TRo0dVp04dtW7dWqdOndKPP/7oUiuqK1euaOrUqZo6dapCQkJUrVo1lSpVSkFBQbp+/bp27dql3bt3O8yTK1culSlTxurVckulSpVMn6NhGOrcubP9c/zjjz+0ceNGj8X48MMPa+zYsQ4t5gzD0BtvvKGvv/7aPq127drau3evw7zt2rVT27ZtFRYWpj179njsLo6nnnrKdPz//vvvVblyZTVv3jzFY0xKxo0bp4cffthh2syZM7Vp0yY1adJE165d07Jly+zXLYmCgoI0YsSI21uZLMbKa+70supcb8WxW7p1N0Fy33//ve677z6VL1/evs7jx493uDuhWbNmDt3a/frrr4qLi3P6HkVGRqb5vpQsWVLHjx93mJZSP8nNmjXT//73Py1dutQ+7Z9//lG1atXUoUMHxcbGatGiRabz61NPPeU0UezM1q1bNXPmTPvyku9j5cqVU4ECBexdMqxZs8Y+LtLmzZsdfoxo2LChS8tM5CypPHbsWIeW7MlFR0crf/78Do0S1q5dq9OnT9uTilWrVlW+fPkcEvgXL15UgwYN9MADD+jixYtaunSpQx0p8fLy0pNPPqnRo0c7TJ80aZLWrl2ru+++W2fOnNGyZcscri/vJHf69z9n++YLL7ygTZs2qVChQvbuyBLHv7H6vOfu8l01atQoffHFFw7b2e7du1WuXDm1bdtWPj4+WrNmjY4ePWqaNz3dqqZX8vfq7rvvdumOH2RjBpCDvfzyy4Ykh8fLL7/sdj0lSpQw1ePM+vXrDW9vb1PZ1B7du3d3Wtfs2bPTnNdmsxlFixY1TV+7dq2pvl9++cXw9fV1KzZn79exY8dMZZo0aeL2e5qoSZMmlnxGia5du2bUr1/f7fUsUaKES7EdO3YszRicbXeff/55iuUPHDhghISEuBXvPffcY8TExFgSs6uf6eeff+7SZ9W7d+80t8mhQ4emuY5FixY1qlSpkub6uBqXYRgufe4xMTFO38eUHr179zbV8d133xm5cuVyeztMbTtxxeLFi43g4GC3lzts2DBTXW+++abb9UybNs1Uz9q1a116z1zdb1zZxp0ts3z58kbu3LndXof4+HijRo0aac7XunVrl7YvV/YPZ9I6D928edPtz6tkyZLGtWvXHOo5c+aM02Wl9ihfvrxx8eLFdK+rq9uIq3r06JFmzOHh4aZpyY97K1eudPs9ffDBB03xuLJdWH0cO3z4sBEYGJhmvJUrV3Z5ua5wtoyUtu8pU6aYynp5eRmHDx+2l9mxY4dLx9L77rvPpfVw5b0zDNe23YSEBKN58+ZpxlasWDGXlztkyBC3tjcvLy9j8eLFpnqsPF8bhuvXwa5wtsz07O9WXnOnd/2sONdbdeyOj4936dh97tw5h/l+//13U5mffvrJvQ/jNt7LU6dOGaVLl3Z53evXr29ER0e7FEtcXJxx1113GZKMPHnyGPv373da7rXXXrPXHxQUZMydO9dYvXq1wzVoy5Yt3Xofbty44fR6bPfu3WnO2759e9N87777rkOZUaNGpfleOTvPpXTdW7169TTrc3a+cPZ9wcrjiqvfUTzx/c/V4+yRI0cMm82WahxVqlSxl7f6vOfu8t15D77++us0607+eP755031GIa15+dEFy5cMPLkyeNQ9sMPP3RaFjkH3a0Amejee+/Vxo0bXWpFljt3br3wwgsOLaaSevTRR/XGG2+kOHBQ7ty5NXXqVLVo0cKl2Bo2bKgtW7aoSpUqLpWXbt2SmjiwTVbh5+en1atXa8CAAS4PvponTx5T9xKZqWLFitq+fbupz3lnbDab+vbtq59//tmjA8PdrrfeeivVgXIKFy6sxYsXe6SlvLe3t37++WcNHTo03f0UdunSRStXrlTx4sVdnqd06dJOW3u4o3379tq5c6c6derk8vbv7+/vtAXwCy+8oM8++8w+QFBqQkJCNHfuXD3++ONux5xZGjRooFmzZqXat/yYMWNM65ArVy59++23qQ4A1aBBg3T1cW0ldwf/LFmypBYvXmxqTVOwYEFt3bpVLVu2dKmedu3aafPmzXdUf8jvv/++qZVlUnfddZfTgbGSc/c9bdGihUu3t2eGsmXLatmyZab+dZN68skn9fTTT5umJ++HNqP079/fdIyPj4/XW2+9ZX9ep04dvf/++ykez2w2m954441M60M5+bIXLFhgb3XqTIkSJbRy5UqX6/zwww/1xhtvuPQZREREaMWKFWrfvr3L9WcnVl5zp5cV53qrjt25cuXSu+++6/K5P1H16tVNXU5k5vksIiJCa9eudamVdocOHfTzzz+b+ulPyfTp0+1dFT7zzDOqVKmS03IjR460d7N25coV9ejRQy1atNC+ffsk3frMPvvsM5eWmWjp0qWmbvrKlCnj0veq5F35SOZW6WPHjk21y4hSpUqZxhhJibe3t3766adUx5Np1KiRqf94KfPOF2m5k7//lSlTRkOHDnW5vNXnPXeX744ePXpo6dKlLg3C6efnp0mTJjmc4zPaggULHO6ACAgI8Mj1Au4sJMmBTFavXj0dPHhQX331lR588EGVLl1agYGBypMnjwoUKKBGjRppzJgxOnLkiN58881Uk3CjRo3SL7/8oi5duqhgwYLy9vZW0aJF1bNnT23bts1pf8CpqVmzpvbu3aslS5aoX79+qlKlikJDQ+Xl5aWAgACVKFFCrVq10ujRo7V27VqdPHnS6YXanS4gIECffPKJDh06pDFjxujee+9VoUKF5OPjI29vb+XPn1/16tVT//799eWXX+qff/5x++LXauXKldOvv/6qJUuWqHfv3qpQoYLy5s2r3LlzKzw8XHXq1NEzzzyjvXv36rPPPpO/v79H471dfn5+WrVqlSZPnqw6derI399fAQEBqlixol544QXt3r1bd911l8fi8/Hx0ZQpU3TkyBG99NJLatKkiX0bCggIUJkyZdS6dWu98847KXYv0rx5cx05ckRz585Vz549Vb58eQUHB8vLy0tBQUEqU6aM2rVrp1dffVVbt27V0aNH1ahRo9uOvUyZMlq4cKH279+vCRMmqE2bNipVqpR9ewoJCVHVqlXVs2dPzZ49W6dOnUpxsOK+ffvqxIkTmjhxotq0aaMiRYrI19dXvr6+Klq0qNq2bavJkyfrxIkTeuihh2479ozWs2dP7dq1S/3791eJEiXk4+OjAgUK6IEHHtC6detS7Du4fPny+u233/Tss8+qXLly8vb2VmhoqOrXr6/Jkydr/fr1Hk8Se3l56fTp05o1a5YGDx6sBg0aKCIiQr6+vsqVK5cCAwNVrlw5derUSTNnztTBgwdVrVo1p3UVKlRIK1eu1Pr16zV48GBVrVpVoaGhyp07t0JDQ1W9enU9/vjj2rx5s5YuXWoaTMrTChQooG3btmnkyJGqUKGCfHx8FBISokaNGmn69Onavn27S31htmjRQn/88Yfef/99Pfzww7rrrrsUHh6uPHny2Pel6tWrq2/fvvrxxx+1atUqj28HSd17773av3+/hg4dqlKlStm397Zt22rZsmWaOnWq026t3O13N738/f01bNgw0/Q5c+bo77//tj8fOnSoNmzYoI4dOyp//vzKkyePihQpoq5du2rdunWmvnMzU0hIiDZu3KgPPvhAdevWVWBgoAIDA1WtWjW9/PLL2rt3rypUqOByfTabTaNGjVJkZKRee+01NW3aVIUKFZK3t7f8/f1VokQJde7cWTNnztRff/3l0R/47wRWXnOn1+2e6608dnft2lXr169Xly5dVKRIEZfHB3nmmWccnn///fcuddVhleLFi2vTpk1asGCBunfvrpIlS8rPz0+BgYEqW7as+vTpo1WrVmnR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e6pr167W9CVLligoKEjFihXT22+/rezZsys8PFwffPCBdu/erZ9++inVfgbJQZAcAAAAAAAAANLYJx99ok8++sQmrWXrlpr0feptVLr0l6UqVaqUFi9ebJM+ZswY679v3rypkJAQZcmSRbt27VK+fPmseR988IHi4+MlSYcOHdLYsWNVs2ZNrV27Vu7u7pKkV199VaVLl9brr7+uo0ePysXFxXr8vn37tGrVKtWvX9+aFh0drR49eqhatWpau3atdbZ87969VaFCBfXv31/r169X3bp1U+3nkBSWWwEAAAAAAACANNY5pLN++uUnm9dbA95K1XP4+vrq9OnTDpdDsVixYoUuXbqkt99+2yZAbuHsfDeEvGjRIhljNGDAAGuAXJL8/f0VEhKif//9V7t27bI5tkKFCjYBcklatWqVzp8/r5CQEF27dk2XLl2yviwz0VeuXPnA1/wgmEkOAAAAAAAAAGmsSLEiCnwh8KHriYqK0o0bN2zSsmXLJnd3d/1v2P8U0iFEtWvXlr+/v+rWraumTZuqTZs21kD333//LUmqVKlSouc5duyYJKlMmTJ2eZa0f/75R1WqVLGmlyhRwq7sgQMHJEndu3dP8Fznz59PtC2pjSA5AAAAAAAAADyhvv7ia306+lObtJ+X/qyadWrquWrP6ejRo1qxYoXWrVundevWadasWRo5cqQ2b96s7NmzP9K2eXl52aUZYyRJY8eOVcWKFR0e5+/v/yibZYcgOQAAAAAAAAA8odp1bKdqNarZpJUp93+zvTNnzqzWrVurdevWkqSvv/5affv2VWhoqN59913rbO/du3erYcOGCZ6nSJEiku6uM27ZyNNi//79NmUSU7x4cUmSt7e33VIs6YU1yQEAAAAAAADgCVWocCEFvhBo88qaLask6fKly3blK1euLEm6cuWKJKlhw4by8/PTZ599prNnz9qVt8z8bt68uZycnDR27FjduXPHmn/27FmFhYWpYMGCSS7ZIkmNGjVSrly5NGbMGGsb7nXr1i1FRkYmfeGpiJnkAAAAAAAAAPCYCd8crvAt4ZKkP3f9KUkK/S5UWbJkkST1H9g/yTpqPVtL1atXV7Vq1eTv76+zZ89q0qRJcnd31yuvvCLp7pIooaGhatOmjcqWLatXX31VxYoV08WLF7VixQr1799fLVq0UEBAgN5991198sknqlOn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uvr3768DBw5o0qRJduVDQ0OVP39+nT9/XmFhYRo6dKg1r2TJksqTJ482bNhgd5wlUOnq6qr169erWLFidvlZs2ZVpUqVUvkK8bTbsWOHAgMD5ebmpi5duqhMmTK6deuW/v77b61cuVI+Pj42s7oyZcqkK1euaPHixWrbtq1NXefPn9fSpUuVKVMmRUdH250rPDxcL7/8sq5fv67g4GD169dPcXFxWrdunYYNG6awsDCtWLFCJUqUkCT98MMPNsdv2rRJkyZNUq9evVS7dm2bvJw5c1qDzA0aNFCXLl0cXm/27Nlt3o8YMULNmjWzCQYeP35cvXr1Uq1atdSjRw/5+/vrn3/+0TfffKMFCxZo+fLldjPd2rdvr0WLFql79+6qXr26wsPDNWTIEB05csTuy8Tnn3+u/v37KzAwUF988YVOnTqlcePGKTw8XNu2bZO3t/cDtSNTpkzq06ePRo0apffff185cuRw+DNA+jty5IiaNm2qw4cPq379+ho0aJD8/Px04cIFrV69WiEhIdq/f786depk93n/1ltvSbr7e3SvokWLWv89bdo09enTR66urmrXrp369OkjLy8vnTt3Ths3btQbb7yhhQsXasWKFXZti42N1fTp01W0aFEdOXJEGzZsUGBgYKLX895776l+/fpJBp4t0qPfjR49WpcvX1alSpV048YNuz+Y3evjjz/We++9p0qVKlm/nM2YMUPNmjXTDz/8YDcD/r///a+6du2qffv2qUyZMsn6GeDxkJJxplKlSpo3b57CwsLUsmVLh/UdPXpUmzZtsga3LC5fvqyFCxeqaNGiWrdunY4fP65ChQol2K4RI0aocOHCdul58+a1eR8eHq5Vq1bZBe6nTp2qiRMnqnnz5goODpabm5vWrVunwYMHa+7cufrtt9/k6elp0+4aNWrI1dVVAwYMUJYsWTR58mQ1atRIy5YtswnOHzp0SKNGjVL+/Pn13HPPadmyZQlex61btxQYGKhdu3apS5cuql69uo4dO6aJEydqzZo12rZtm/LkyWMtX6FCBdWtW1cffvihmjdvnmC9SFuPeszau3evtm3bpqJFi2ru3Ln68ssvrfdCjnzzzTfKnDmzpLt9a9GiRRo4cKC2bNmiRYsW2ZQdNWqUhgwZomzZsql9+/YqW7as3N3dderUKa1evVpdunTR5s2b9d1339mdJ6X9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\n","text/plain":["<Figure size 1800x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig, ax = plt.subplots(figsize=(18,6))\n","bar_width = 0.25\n","\n","index = np.arange(6)\n","\n","plt.rc('font', size=13)\n","\n","b1 = plt.bar(index, df['ACC'], bar_width, alpha=0.4, color='red', label='ACC')\n","\n","b2 = plt.bar(index + bar_width, df['AUC'], bar_width, alpha=0.4, color='blue', label='AUC')\n","\n","b3 = plt.bar(index + 2 * bar_width, df['F1-score'], bar_width, alpha=0.4, color='green', label='F1-score')\n","\n","# 각 막대에 대한 값을 표시\n","for b in [b1, b2, b3]:\n","    for rect in b:\n","        height = rect.get_height()\n","        ax.text(rect.get_x() + rect.get_width() / 2., height,\n","                '%d' % round(float(height)), ha='center', va='bottom')\n","\n","plt.xticks(np.arange(bar_width, 6 + bar_width, 1), model)\n","\n","plt.ylabel('Performance', size = 20,fontweight='bold')\n","plt.xlabel('Models', size = 20,fontweight='bold')\n","plt.title(\"Model Performance Comparison using Random Forest(40% Augmentation)\",size=20,fontweight='bold')\n","plt.legend(loc='lower right')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"OZuJb-Am_O3l"},"source":[]}],"metadata":{"colab":{"provenance":[],"collapsed_sections":["p4mIa3w0xbwN","uow-_7DhneHQ","Ue8MIJ1zrRwn"],"authorship_tag":"ABX9TyNsVVPyXNz2QxoXHUKJjInS"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}